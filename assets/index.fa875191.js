var g=Object.defineProperty;var w=(n,e,t)=>e in n?g(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>(w(n,typeof e!="symbol"?e+"":e,t),t);import{P as d}from"./vendor.c2cc9365.js";const m=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerpolicy&&(i.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?i.credentials="include":s.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}};m();class u extends Phaser.Scene{constructor(){super("Boot")}preload(){this.load.setPath("/assets/"),this.load.image("background","background2.jpg"),this.load.bitmapFont("slime","click_0.png","click.xml")}create(){this.registry.set("highscore",0),this.scene.start("Preloader")}}class y extends Phaser.Physics.Arcade.Sprite{constructor(e,t,r){super(e,t,r,"player");a(this,"isAlive");a(this,"speed");a(this,"target");this.setScale(1.5),e.add.existing(this),e.physics.add.existing(this),this.isAlive=!1,this.speed=280,this.target=new Phaser.Math.Vector2}start(){this.isAlive=!0,this.scene.input.on("pointermove",e=>{if(this.isAlive){var t=e.positionToCamera(this.scene.cameras.main);this.target.x=t.x,this.target.y=t.y,this.rotation=this.scene.physics.moveTo(this,this.target.x,this.target.y,this.speed)-1.5707963267948966}})}kill(){this.isAlive=!1,this.body.stop()}}class f extends Phaser.Physics.Arcade.Group{constructor(e,t){super(e,t);a(this,"outer");a(this,"target");this.outer=new Phaser.Geom.Rectangle(64,64,window.innerWidth,window.innerHeight),this.target=new Phaser.Geom.Point}start(){const e=window.innerHeight,t=window.innerWidth;this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring"),this.create(Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"ring")}collect(e){this.outer.getRandomPoint(this.target),e.body.reset(this.target.x,this.target.y)}}class c extends Phaser.Physics.Arcade.Sprite{constructor(e,t,r,s,i){super(e,t,r,"circle");a(this,"speed");a(this,"lifespan");a(this,"isChasing");a(this,"target");a(this,"scene");this.play(s),this.setScale(Phaser.Math.FloatBetween(1,2)),this.speed=i,this.alpha=0,this.lifespan=0,this.isChasing=!1,this.target=new Phaser.Math.Vector2,this.scene=e}start(e){return this.setCircle(14,6,2),e||(e=Phaser.Math.RND.between(1e3,4e3)),this.scene.tweens.add({targets:this,alpha:1,duration:2e3,ease:"Linear",hold:e,onComplete:()=>{this.scene.player.isAlive&&(this.lifespan=Phaser.Math.RND.between(6e3,12e3),this.isChasing=!0)}}),this}restart(e,t){return this.body.reset(e,t),this.setActive(!0),this.setVisible(!0),this.setAlpha(0),this.start(0)}preUpdate(e,t){super.preUpdate(e,t),this.isChasing&&(this.lifespan-=t,this.lifespan<=0?(this.isChasing=!1,this.body.stop(),this.scene.tweens.add({targets:this,alpha:0,duration:1e3,ease:"Linear",onComplete:()=>{this.setActive(!1),this.setVisible(!1)}})):(this.scene.getPlayer(this.target),this.rotation=this.scene.physics.moveToObject(this,this.target,this.speed)-1.5707963267948966))}stop(){this.isChasing=!1,this.body.stop()}}class P extends Phaser.Physics.Arcade.Group{constructor(e,t){super(e,t);a(this,"shapeConfig");a(this,"timedEvent");this.classType=c,this.shapeConfig=[{animation:"circle",speed:60},{animation:"rectangle",speed:90},{animation:"rect",speed:120},{animation:"triangle",speed:180}]}start(){const e=window.innerHeight,t=window.innerWidth;let r=new c(this.scene,Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"circle",5),s=new c(this.scene,Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"rectangle",5),i=new c(this.scene,Phaser.Math.RND.between(10,t),Phaser.Math.RND.between(10,e),"rect",5);this.add(r,!0),this.add(s,!0),this.add(i,!0),r.start(1e3),s.start(2e3),i.start(3e3),this.timedEvent=this.scene.time.addEvent({delay:2e3,callback:this.releaseShape,callbackScope:this,loop:!0})}stop(){this.timedEvent.remove(),this.getChildren().forEach(e=>{e.stop()})}releaseShape(){const e=Phaser.Math.RND.between(0,window.innerWidth),t=Phaser.Math.RND.between(0,window.innerHeight);let r=Phaser.Math.RND.pick(this.shapeConfig),s;this.getChildren().forEach(i=>{i.anims.getName()===r.animation&&!i.active&&(s=i)}),s?s.restart(e,t):(s=new c(this.scene,e,t,r.animation,r.speed),this.add(s,!0),s.start())}}const h=new Phaser.Events.EventEmitter;class b extends Phaser.Scene{constructor(){super("MainGame");a(this,"player");a(this,"shapes");a(this,"rings");a(this,"score");a(this,"highscore");a(this,"newHighscore");this.player,this.shapes,this.rings,this.score=0,this.highscore=0,this.newHighscore=!1}create(){this.scene.run("ui-scene"),this.score=0,this.highscore=this.registry.get("highscore"),this.newHighscore=!1,this.add.image(window.innerWidth/2,window.innerHeight/2,"background"),this.shapes=new P(this.physics.world,this),this.player=new y(this,window.innerWidth/2,window.innerHeight/2);var e=this.cameras.main.setBounds(0,0,window.innerWidth,window.innerHeight);e.zoom=2,this.rings=new f(this.physics.world,this),this.rings.start(),this.rings.playAnimation("ring"),this.input.once("pointerdown",()=>{this.player.start(),this.player.anims.play({key:"player",repeat:-1}),this.shapes.start(),e.startFollow(this.player)}),this.physics.add.overlap(this.player,this.rings,(t,r)=>this.playerHitPickup(t,r)),this.physics.add.overlap(this.player,this.shapes,(t,r)=>this.playerHitShape(t,r))}playerHitShape(e,t){e.isAlive&&t.alpha===1&&this.gameOver()}playerHitPickup(e,t){this.score++,h.emit("update-count",this.score),this.rings.collect(t)}gameOver(){this.player.kill(),this.shapes.stop(),h.emit("game-over",this.score),this.newHighscore&&this.registry.set("highscore",this.score),this.input.once("pointerdown",()=>{this.scene.start("MainMenu")})}getPlayer(e){return e.x=this.player.x,e.y=this.player.y,e}}class R extends Phaser.Scene{constructor(){super("MainMenu")}create(){this.add.image(window.innerWidth/2,window.innerHeight/2,"background");const e=new Phaser.Geom.Rectangle(0,0,window.innerWidth,window.innerHeight);this.addShape(e,"circle"),this.addShape(e,"rectangle"),this.addShape(e,"rect"),this.addShape(e,"triangle"),this.add.bitmapText(window.innerWidth/2,window.innerHeight/2,"slime","Geometric Championship",100).setOrigin(.5),this.add.bitmapText(window.innerWidth/2,window.innerHeight/2+200,"slime","Click to Play",40).setOrigin(.5),this.input.once("pointerdown",()=>{this.scene.start("MainGame")})}addShape(e,t){let r=e.getRandomPoint(),s=this.add.sprite(r.x,r.y,"").play(t).setScale(3),i=Phaser.Math.Between(4e3,6e3),o=i+3e3;this.tweens.add({targets:s,x:{getStart:(l,p)=>s.x,getEnd:()=>e.getRandomPoint().x,duration:i,ease:"Linear"},y:{getStart:(l,p)=>s.y,getEnd:()=>e.getRandomPoint().y,duration:o,ease:"Linear"},repeat:-1})}}class x extends Phaser.Scene{constructor(){super("Preloader");a(this,"loadText")}preload(){this.add.image(0,0,"background"),this.loadText=this.add.bitmapText(window.innerWidth/2,window.innerHeight/2,"slime","Loading ...",80).setOrigin(.5),this.load.setPath("/assets/"),this.load.glsl("goo","goo.glsl"),this.load.aseprite({key:"circle",textureURL:"circle.png",atlasURL:"circle.json"}),this.load.aseprite({key:"rectangle",textureURL:"rectangle.png",atlasURL:"rectangle.json"}),this.load.aseprite({key:"rect",textureURL:"rect.png",atlasURL:"rect.json"}),this.load.aseprite({key:"triangle",textureURL:"triangle.png",atlasURL:"triangle.json"}),this.load.aseprite({key:"player",textureURL:"player.png",atlasURL:"player.json"}),this.load.aseprite({key:"ring",textureURL:"ring.png",atlasURL:"ring.json"})}create(){this.anims.create({key:"circle",frames:this.anims.generateFrameNames("circle"),frameRate:8,repeat:-1}),this.anims.create({key:"rectangle",frames:this.anims.generateFrameNames("rectangle"),frameRate:8,repeat:-1}),this.anims.create({key:"rect",frames:this.anims.generateFrameNames("rect"),frameRate:8,repeat:-1}),this.anims.create({key:"triangle",frames:this.anims.generateFrameNames("triangle"),frameRate:8,repeat:-1}),this.anims.create({key:"player",frames:this.anims.generateFrameNames("player"),frameRate:8,repeat:-1}),this.anims.create({key:"ring",frames:this.anims.generateFrameNames("ring"),frameRate:8,repeat:-1}),this.scene.start("MainMenu")}}class M extends Phaser.Scene{constructor(){super("ui-scene");a(this,"scoreText");a(this,"introText")}create(){this.scoreText=this.add.bitmapText(32,32,"slime","Score   0",40).setDepth(1).setScrollFactor(0),this.introText=this.add.bitmapText(window.innerWidth/2,window.innerHeight/2,"slime",`Avoid the Geometric Figures
Collect the Rings`,60).setOrigin(.5).setCenterAlign().setDepth(1),h.on("update-count",this.updateCount,this),h.on("game-over",this.gameOver,this),this.events.on(Phaser.Scenes.Events.SHUTDOWN,()=>{h.off("update-count",this.updateCount,this)}),this.events.on(Phaser.Scenes.Events.SHUTDOWN,()=>{h.off("game-over",this.gameOver,this)}),this.input.once("pointerdown",()=>{this.tweens.add({targets:this.introText,alpha:0,duration:300})})}gameOver(){this.introText.setText("Game Over!"),this.tweens.add({targets:this.introText,alpha:1,duration:300}),this.input.once("pointerdown",()=>{this.tweens.add({targets:this.introText,alpha:0,duration:300})})}updateCount(e){this.scoreText.setText("Score   "+e)}}var v={type:d.AUTO,width:window.innerWidth,height:window.innerHeight,backgroundColor:"#000000",parent:"phaser-example",scene:[u,x,R,b,M],physics:{default:"arcade",arcade:{debug:!1}},pixelArt:!0};new d.Game(Object.assign(v));
